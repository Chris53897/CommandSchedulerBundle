parameters:
    database_path: "%kernel.project_dir%/build/test.db"

framework:
    translator:      ~
    assets:
    secret:          secret
    test:            ~
    router:          { resource: "%kernel.project_dir%/Tests/App/config/routing.yml" }
    form:            true
    csrf_protection: false
    validation:      { enable_annotations: true }
    session:
        storage_id: session.storage.filesystem
        #storage_id: session.storage.mock_file
        #name: MOCKSESSION
    profiler:
        enabled: true
        collect: true

#liip_functional_test: ~

doctrine:
    dbal:
        driver:   pdo_sqlite
        dbname:   jmose_command_scheduler_test
        user:     root
        charset:  UTF8
        path:     "%database_path%"
        url:      null
    orm:
        auto_generate_proxy_classes: true
        auto_mapping: true
        naming_strategy: doctrine.orm.naming_strategy.underscore_number_aware

security:
    firewalls:
        secured_area:
            pattern:    ^/
            anonymous:  true
    providers:
        in_memory:
             memory: ~

jmose_command_scheduler:
    lock_timeout: 300
    excluded_command_namespaces:
        - scheduler

#liip_functional_test:
#    command_decoration: false

liip_test_fixtures:
    cache_db:
        sqlite: liip_test_fixtures.services_database_backup.sqlite

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: true

    JMose\CommandSchedulerBundle\Fixtures\ORM\:
        resource: '../../../Fixtures/ORM/*'
        tags: ['doctrine.fixture.orm']

    #JMose\CommandSchedulerBundle\Entity\:
        #resource: '../../../Entity/*'
        #tags: [ 'controller.service_arguments' ]

    #JMose\CommandSchedulerBundle\Entity\ScheduledCommand:
        #tags: [ controller.service_arguments ]
